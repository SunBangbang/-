总体分为四大部分:
    1.地图
        1)宽,高,背景颜色
        2)设置其相对定位
    2.食物(面向过程,构建函数 )
        1)绘制宽,高,背景颜色,绝对定位
        2)设置初始化结构,根据对应的属性，创建一个div将其添加到页面上
        3)设置食物的随机位置
            位置按照一定的顺序排列在页面上
            获得随机数,根据随机的坐标，计算出对应的left与top，设置给元素即可
        4)将其添加为window的属性
    3.小蛇(面向过程,构建函数 )
        1)初始化时,小蛇由三个蛇身组成:宽,高
            背景颜色,位置可以由对象的方式储存(body),看起来比较的清晰
            根据body中的数据创建三个初始蛇身结构
        2)设置小蛇的运动功能
            除了蛇头以外,其余的蛇身均使用的是前面一个蛇身的上一次显示位置
            设置蛇头坐标:默认向右
            根据小蛇的运动方向dir属性值,设置蛇头的运动方式
        3)将其添加为window的属性
    4.游戏操作
    游戏功能所需要的内容：食物，小蛇，地图
        1)设置游戏的初始化功能：
            绘制食物
            绘制小蛇
            设置小蛇运动
            设置按键操作，控制小蛇的运动方向
        2)设置小蛇的运动功能(定时器)
            在绘制新的小蛇之前，先移除旧的小蛇结构
            判断小蛇运动时是否吃到食物,蛇头坐标与食物坐标一致时吃到食物,吃到食物前应获取旧的蛇尾坐标,
            设置新的蛇尾坐标,将这个新的坐标对象放入到body属性中,然后生成新的食物,并添加一个新的蛇身的位置
        3)设置运动方向更改功能:
            设置keydown事件，按下后立刻做出改变方向的操作
            更改小蛇的运动方向为对应方向，同时检测，当前运动方向不能与点击的方向相反
        4)在小蛇运动的过程中检测游戏是否结束:
            小蛇撞到自己的身体时游戏结束,只有除前四个蛇身以外的其他蛇身才可能被撞到
            撞墙时游戏结束:需要检测蛇头与坐标边界的关系
        5)将其添加为window的属性